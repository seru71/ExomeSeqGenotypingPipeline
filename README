
## Pipeline

The NGS pipeline can be run using one python script:

### genotyping_pipeline.py

Main pipeline script for *multi sample analysis*.

*   Running the script

    You can run the script using `python <PIPELINE_HOME>/genotyping_pipeline.py`.
    A list of possible options will be presented. The only required option is `--run_folder RUN_FOLDER`, 
    which specifies the location of input NextSeq500's run folder.
    
    Important part of the pipeline is the settings file which contains paths to resources 
    (e.g. reference genome, database, capture regions), docker settings, 
    and docker containers to use. See an exemplary file for all required options 
    in <PIPELINE_HOME>/pipeline_settings.cfg.
    If the settings file is not given as argument (--settings), it is expected in the RUN_FOLDER/settings.cfg
  
    If you want to follow progress of the script, use the verbose option (`-vvvvv`).
    In order to use multithreading, use the `-j` option (`-j 12`).

*   Outputs

    The script will create RUN_ID folder in the scratch-root directory (given in settings). 
    Inside there will be several directories: 
    	SAMPLE_ID/ - one dir per sample, named after samples found in the RUN_FOLDER 
    	fastqs/    - fastq files
    	drmaa/     - slurm scripts created automatically (for debugging purposes)
    	qc/        - qc output

    After finishing, the sample directories will contain:
    	- cleaned up bam file (`SAMPLE_ID.gatk.bam`)
    	- VCF file (`SAMPLE_ID.exome.vcf`) with variants restricted to the exome intervals (specified in the settings file)
    	- GVCF file (`SAMPLE_ID.gvcf`)
    	- some quality control files (e.g. coverage statistics)
   
    Directly in the RUN_ID directory additional files will be created:
    	- multisample VCF with raw snps and indels for all samples (`RUN_ID.multisample.vcf`)
    	- cleanded multisample VCF with recalibrated variants restricted to the exome intervals (`RUN_ID.multisample.analysisReady.exome.vcf`) 

*   Typical usage

    For running the genotyping analysis using 12 concurrent tasks:

	genotyping_pipeline.py --run_folder /incoming/RUN_XXXX_YYYY_ZZZZZ \
						    --settings /my_dir/pipeline_settings/nextera_1.2_settings.cfg \
							--target complete_run \
							-vvv -j 12 \
							--log_file /my_dir/pipeline_run_XXX.log





