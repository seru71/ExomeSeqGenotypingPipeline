#
# This is an exemplary pipeline-settings.cfg file. 
# It contains configuration entries for the genotyping pipeline.
#
#
# author: Pawel Sztromwasser
#


#
# Docker settings
#
 
[Docker] 
# Specified host directories which will be mounted by docker with read-only (reference-root) and RW access (scratch-root/RUN_ID) 
# All paths specified below in sections Inputs and Resources will be resolved with respect to these root directories.
reference-root:	    /persistent/diagnostic/reference
scratch-root:       /scratch/diagnostics/

# Optional results- and fastq-archive directories, mounted to docker images with RO (writing happens outside docker containers).
# If these directories are not set, they are not mounted to docker containers, 
# and the fastq and/or gatk.bam, exome.vcf, and multisample.gvcf are not archived outside the working (scratch) directory.
# Also, the location of external gvcf files (see Inputs) is resolved relative to the results-archive. 
# If results archive is not provided, the external gvcfs will not be found.
results-archive:    /persistent/diagnostics/archive/vcrome_2.1/results
fastq-archive:      /persistent/diagnostics/archive/vcrome_2.1/fastq
#results-archive:    /persistent/diagnostics/archive/nextera_1.2/results
#fastq-archive:      /persistent/diagnostics/archive/nextera_1.2/fastq


# Large-capacity tmp directory to be mounted to docker container and used as tmp. 
# If commented out, the /tmp of the docker container is used.
# tmp-directory:		/tmp

# Other docker settings
docker-binary:		docker
docker-args:		run --rm



#
# Pipeline inputs
#

[Inputs]
# Input run-dir / run_id is provided as a CLI argument

# Path (GLOB expression) describing location of raw bam files. 
# NOT USED at the moment
#input-bams: my-project/*.bam

# Wildcard-path specifing external .gvcf files to jointy call with this run. 
# In dockerized execution mode the paths are resolved relative to results-archive. In regular execution mode paths should be absolute. 
#call-with-gvcfs: */*.multisample.gvcf




#
# Resources (databases, files)
# NOTE: Paths relative to root-reference
#

[Resources]
reference-genome: 			g1k_v37/human_g1k_v37.fasta
dbsnp-vcf: 					g1k_v37/dbsnp_138.b37.vcf
hapmap-vcf: 				g1k_v37/hapmap_3.3.b37.vcf
1000genomes-omni-vcf:		g1k_v37/1000G_omni2.5.b37.vcf 
1000genomes-snps-vcf: 		g1k_v37/1000G_phase1.snps.high_confidence.b37.vcf
1000genomes-indels-vcf: 	g1k_v37/1000G_phase1.indels.b37.vcf
mills-indels-vcf: 			g1k_v37/Mills_and_1000G_gold_standard.indels.b37.vcf

adapters-fasta:             TruSeq3-PE-2.fa
#adapters-fasta:             NexteraPE-PE.fa

# bed files with capture regions used in coverage statistics calculations
capture-regions-bed: 					g1k_v37/VCRome_2_1_hg19_primary_targets_g1k.bed
#capture-regions-bed: 					g1k_v37/nexterarapidcapture_exome_targetedregions_v1.2_g1k.bed
capture-regions-bed-for-qualimap:       g1k_v37/NOT_USED.TO_CREATE_ADD_THREE_MOCK_COLUMNS_TO_THE_ABOVE_FILE

# bed file with expanded capture regions to include surrounded and covered, although not targeted bases. Used in filtering variants 
exome-regions-bed:                      g1k_v37/VCRome_2_1_hg19_primary_targets_wingspan_g1k.bed
#exome-regions-bed:                     g1k_v37/nexterarapidcapture_exome_targetedregions_v1.2_g1k_wingspan.bed

# gene coordinates for calculating gene coverage
gene-coordinates:						g1k_v37/ccds_exons.hg19						



[Tools]

# Depending on the execution mode (dockerized or regular) the tool's definition should be provided in appropriate format. 
# For dockerized execution provide docker image name/ID, its version, and executable that should be run inside. 
# Exemplary settings below use "dpipe" image repository, and latest version of the image for each tool (NOTE: best practice is to use exact versioning).
# {args} and {interpreter_args} are place-holders for tool/execution arguments and interpreter arguments (such as -XmX4G in Java). 
# Detailed examples can be found in the pipeline source code: function run_cmd.
#

bcl2fastq:					dpipe/bcl2fastq:latest bcl2fastq {args}
trimmomatic:				dpipe/trimmomatic:latest trimmomatic {args} {interpreter_args}
bwa:						dpipe/bwa_samtools:latest bwa_pipe.sh {args}
samtools:					dpipe/bwa_samtools:latest samtools {args}
picard-tools: 				dpipe/picard:latest picard {args} {interpreter_args} 
gatk: 						dpipe/gatk:latest gatk {args} {interpreter_args}
# QualiMap is currently not supported in dockerized execution (image has not been created) 
qualimap: 					dpipe/qualimap:latest qualimap {args} {interpreter_args}

# In regular execution mode (when docker binary setting is commented-out), the path to the tool's executable should be given, 
# or an interpreter (java/python/perl) together with the path to the tool. 
# Similarly as in tool descriptions above, {args} and {interpreter_args} are place-holders for the respective arguments.
#
#
#bcl2fastq:					PATH/TO/bcl2fastq:latest bcl2fastq {args}
#trimmomatic:				java {interpreter_args} PATH/TO/Trimmomatic.jar {args}
#bwa:						PATH/TO/bwa {args}
#samtools:					PATH/TO/samtools {args}
#picard-tools: 				java {interpreter_args} PATH/TO/PICARD_TOOLS/{args}  
#gatk: 						java {interpreter_args} PATH/TO/GenomeAnalysisTK.jar {args}
#qualimap: 					java {interpreter_args} PATH/TO/Qualimap.jar {args}



